{"version":3,"sources":["state.js"],"names":[],"mappings":"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","file":"state-compiled.js","sourcesContent":["import {tokenizer, SourceLocation, tokTypes as tt, Node, lineBreak, isNewLine} from \"..\"\n\n// Registered plugins\nexport const pluginsLoose = {}\n\nexport class LooseParser {\n  constructor(input, options) {\n    this.toks = tokenizer(input, options)\n    this.options = this.toks.options\n    this.input = this.toks.input\n    this.tok = this.last = {type: tt.eof, start: 0, end: 0}\n    if (this.options.locations) {\n      let here = this.toks.curPosition()\n      this.tok.loc = new SourceLocation(this.toks, here, here)\n    }\n    this.ahead = [] // Tokens ahead\n    this.context = [] // Indentation contexted\n    this.curIndent = 0\n    this.curLineStart = 0\n    this.nextLineStart = this.lineEnd(this.curLineStart) + 1\n    // Load plugins\n    this.options.pluginsLoose = options.pluginsLoose || {}\n    this.loadPlugins(this.options.pluginsLoose)\n  }\n\n  startNode() {\n    return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n  }\n\n  storeCurrentPos() {\n    return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n  }\n\n  startNodeAt(pos) {\n    if (this.options.locations) {\n      return new Node(this.toks, pos[0], pos[1])\n    } else {\n      return new Node(this.toks, pos)\n    }\n  }\n\n  finishNode(node, type) {\n    node.type = type\n    node.end = this.last.end\n    if (this.options.locations)\n      node.loc.end = this.last.loc.end\n    if (this.options.ranges)\n      node.range[1] = this.last.end\n    return node\n  }\n\n  dummyNode(type) {\n    let dummy = this.startNode()\n    dummy.type = type\n    dummy.end = dummy.start\n    if (this.options.locations)\n      dummy.loc.end = dummy.loc.start\n    if (this.options.ranges)\n      dummy.range[1] = dummy.start\n    this.last = {type: tt.name, start: dummy.start, end: dummy.start, loc: dummy.loc}\n    return dummy\n  }\n\n  dummyIdent() {\n    let dummy = this.dummyNode(\"Identifier\")\n    dummy.name = \"✖\"\n    return dummy\n  }\n\n  dummyString() {\n    let dummy = this.dummyNode(\"Literal\")\n    dummy.value = dummy.raw = \"✖\"\n    return dummy\n  }\n\n  eat(type) {\n    if (this.tok.type === type) {\n      this.next()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isContextual(name) {\n    return this.tok.type === tt.name && this.tok.value === name\n  }\n\n  eatContextual(name) {\n    return this.tok.value === name && this.eat(tt.name)\n  }\n\n  canInsertSemicolon() {\n    return this.tok.type === tt.eof || this.tok.type === tt.braceR ||\n      lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n  }\n\n  semicolon() {\n    return this.eat(tt.semi)\n  }\n\n  expect(type) {\n    if (this.eat(type)) return true\n    for (let i = 1; i <= 2; i++) {\n      if (this.lookAhead(i).type == type) {\n        for (let j = 0; j < i; j++) this.next()\n        return true\n      }\n    }\n  }\n\n  pushCx() {\n    this.context.push(this.curIndent)\n  }\n\n  popCx() {\n    this.curIndent = this.context.pop()\n  }\n\n  lineEnd(pos) {\n    while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n    return pos\n  }\n\n  indentationAfter(pos) {\n    for (let count = 0;; ++pos) {\n      let ch = this.input.charCodeAt(pos)\n      if (ch === 32) ++count\n      else if (ch === 9) count += this.options.tabSize\n      else return count\n    }\n  }\n\n  closes(closeTok, indent, line, blockHeuristic) {\n    if (this.tok.type === closeTok || this.tok.type === tt.eof) return true\n    return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n      (!blockHeuristic || this.nextLineStart >= this.input.length ||\n       this.indentationAfter(this.nextLineStart) < indent)\n  }\n\n  tokenStartsLine() {\n    for (let p = this.tok.start - 1; p >= this.curLineStart; --p) {\n      let ch = this.input.charCodeAt(p)\n      if (ch !== 9 && ch !== 32) return false\n    }\n    return true\n  }\n\n  extend(name, f) {\n    this[name] = f(this[name])\n  }\n\n  loadPlugins(pluginConfigs) {\n    for (let name in pluginConfigs) {\n      let plugin = pluginsLoose[name]\n      if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n      plugin(this, pluginConfigs[name])\n    }\n  }\n}\n"]}