{"version":3,"sources":["tokenize.js"],"names":[],"mappings":"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","file":"tokenize-compiled.js","sourcesContent":["import {isIdentifierStart, isIdentifierChar} from \"./identifier\"\nimport {types as tt, keywords as keywordTypes} from \"./tokentype\"\nimport {Parser} from \"./state\"\nimport {SourceLocation} from \"./locutil\"\nimport {lineBreak, lineBreakG, isNewLine, nonASCIIwhitespace} from \"./whitespace\"\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(p) {\n    this.type = p.type\n    this.value = p.value\n    this.start = p.start\n    this.end = p.end\n    if (p.options.locations)\n      this.loc = new SourceLocation(p, p.startLoc, p.endLoc)\n    if (p.options.ranges)\n      this.range = [p.start, p.end]\n  }\n}\n\n// ## Tokenizer\n\nconst pp = Parser.prototype\n\n// Are we running under Rhino?\nconst isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\"\n\n// Move to the next token\n\npp.next = function() {\n  if (this.options.onToken)\n    this.options.onToken(new Token(this))\n\n  this.lastTokEnd = this.end\n  this.lastTokStart = this.start\n  this.lastTokEndLoc = this.endLoc\n  this.lastTokStartLoc = this.startLoc\n  this.nextToken()\n}\n\npp.getToken = function() {\n  this.next()\n  return new Token(this)\n}\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  pp[Symbol.iterator] = function () {\n    let self = this\n    return {next: function () {\n      let token = self.getToken()\n      return {\n        done: token.type === tt.eof,\n        value: token\n      }\n    }}\n  }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp.setStrict = function(strict) {\n  this.strict = strict\n  if (this.type !== tt.num && this.type !== tt.string) return\n  this.pos = this.start\n  if (this.options.locations) {\n    while (this.pos < this.lineStart) {\n      this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1\n      --this.curLine\n    }\n  }\n  this.nextToken()\n}\n\npp.curContext = function() {\n  return this.context[this.context.length - 1]\n}\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  let curContext = this.curContext()\n  if (!curContext || !curContext.preserveSpace) this.skipSpace()\n\n  this.start = this.pos\n  if (this.options.locations) this.startLoc = this.curPosition()\n  if (this.pos >= this.input.length) return this.finishToken(tt.eof)\n\n  if (curContext.override) return curContext.override(this)\n  else this.readToken(this.fullCharCodeAtPos())\n}\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    return this.readWord()\n\n  return this.getTokenFromCode(code)\n}\n\npp.fullCharCodeAtPos = function() {\n  let code = this.input.charCodeAt(this.pos)\n  if (code <= 0xd7ff || code >= 0xe000) return code\n  let next = this.input.charCodeAt(this.pos + 1)\n  return (code << 10) + next - 0x35fdc00\n}\n\npp.skipBlockComment = function() {\n  let startLoc = this.options.onComment && this.curPosition()\n  let start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2)\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\")\n  this.pos = end + 2\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start\n    let match\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine\n      this.lineStart = match.index + match[0].length\n    }\n  }\n  if (this.options.onComment)\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\npp.skipLineComment = function(startSkip) {\n  let start = this.pos\n  let startLoc = this.options.onComment && this.curPosition()\n  let ch = this.input.charCodeAt(this.pos+=startSkip)\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this.pos\n    ch = this.input.charCodeAt(this.pos)\n  }\n  if (this.options.onComment)\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    let ch = this.input.charCodeAt(this.pos)\n    switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos\n        if (this.options.locations) {\n          ++this.curLine\n          this.lineStart = this.pos\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42: // '*'\n            this.skipBlockComment()\n            break\n          case 47:\n            this.skipLineComment(2)\n            break\n          default:\n            break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos\n        } else {\n          break loop\n        }\n    }\n  }\n}\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos\n  if (this.options.locations) this.endLoc = this.curPosition()\n  let prevType = this.type\n  this.type = type\n  this.value = val\n\n  this.updateContext(prevType)\n}\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next >= 48 && next <= 57) return this.readNumber(true)\n  let next2 = this.input.charCodeAt(this.pos + 2)\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3\n    return this.finishToken(tt.ellipsis)\n  } else {\n    ++this.pos\n    return this.finishToken(tt.dot)\n  }\n}\n\npp.readToken_slash = function() { // '/'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (this.exprAllowed) {++this.pos; return this.readRegexp()}\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.slash, 1)\n}\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  let next = this.input.charCodeAt(this.pos + 1)\n  let size = 1\n  let tokentype = code === 42 ? tt.star : tt.modulo\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size\n    tokentype = tt.starstar\n    next = this.input.charCodeAt(this.pos + 2)\n  }\n\n  if (next === 61) return this.finishOp(tt.assign, size + 1)\n  return this.finishOp(tokentype, size)\n}\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1)\n}\n\npp.readToken_caret = function() { // '^'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.bitwiseXOR, 1)\n}\n\npp.readToken_plus_min = function(code) { // '+-'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&\n        lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3)\n      this.skipSpace()\n      return this.nextToken()\n    }\n    return this.finishOp(tt.incDec, 2)\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.plusMin, 1)\n}\n\npp.readToken_lt_gt = function(code) { // '<>'\n  let next = this.input.charCodeAt(this.pos + 1)\n  let size = 1\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1)\n    return this.finishOp(tt.bitShift, size)\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected()\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4)\n    this.skipSpace()\n    return this.nextToken()\n  }\n  if (next === 61) size = 2\n  return this.finishOp(tt.relational, size)\n}\n\npp.readToken_eq_excl = function(code) { // '=!'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2)\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2\n    return this.finishToken(tt.arrow)\n  }\n  return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1)\n}\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(tt.parenL)\n  case 41: ++this.pos; return this.finishToken(tt.parenR)\n  case 59: ++this.pos; return this.finishToken(tt.semi)\n  case 44: ++this.pos; return this.finishToken(tt.comma)\n  case 91: ++this.pos; return this.finishToken(tt.bracketL)\n  case 93: ++this.pos; return this.finishToken(tt.bracketR)\n  case 123: ++this.pos; return this.finishToken(tt.braceL)\n  case 125: ++this.pos; return this.finishToken(tt.braceR)\n  case 58: ++this.pos; return this.finishToken(tt.colon)\n  case 63: ++this.pos; return this.finishToken(tt.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) break\n    ++this.pos\n    return this.finishToken(tt.backQuote)\n\n  case 48: // '0'\n    let next = this.input.charCodeAt(this.pos + 1)\n    if (next === 120 || next === 88) return this.readRadixNumber(16) // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) return this.readRadixNumber(8) // '0o', '0O' - octal number\n      if (next === 98 || next === 66) return this.readRadixNumber(2) // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(tt.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\")\n}\n\npp.finishOp = function(type, size) {\n  let str = this.input.slice(this.pos, this.pos + size)\n  this.pos += size\n  return this.finishToken(type, str)\n}\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message)\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\")\n\npp.readRegexp = function() {\n  let escaped, inClass, start = this.pos\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\")\n    let ch = this.input.charAt(this.pos)\n    if (lineBreak.test(ch)) this.raise(start, \"Unterminated regular expression\")\n    if (!escaped) {\n      if (ch === \"[\") inClass = true\n      else if (ch === \"]\" && inClass) inClass = false\n      else if (ch === \"/\" && !inClass) break\n      escaped = ch === \"\\\\\"\n    } else escaped = false\n    ++this.pos\n  }\n  let content = this.input.slice(start, this.pos)\n  ++this.pos\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  let mods = this.readWord1()\n  let tmp = content\n  if (mods) {\n    let validFlags = /^[gim]*$/\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\")\n    if (mods.indexOf('u') >= 0 && !regexpUnicodeSupport) {\n      // Replace each astral symbol and every Unicode escape sequence that\n      // possibly represents an astral symbol or a paired surrogate with a\n      // single ASCII symbol to avoid throwing on regular expressions that\n      // are only valid in combination with the `/u` flag.\n      // Note: replacing with the ASCII symbol `x` might cause false\n      // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n      // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n      // be replaced by `[x-b]` which throws an error.\n      tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, (_match, code, offset) => {\n        code = Number(\"0x\" + code)\n        if (code > 0x10FFFF) this.raise(start + offset + 3, \"Code point out of bounds\")\n        return \"x\"\n      })\n      tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\")\n    }\n  }\n  // Detect invalid regular expressions.\n  let value = null\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, undefined, start, this)\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods)\n  }\n  return this.finishToken(tt.regexp, {pattern: content, flags: mods, value: value})\n}\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len) {\n  let start = this.pos, total = 0\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    let code = this.input.charCodeAt(this.pos), val\n    if (code >= 97) val = code - 97 + 10 // a\n    else if (code >= 65) val = code - 65 + 10 // A\n    else if (code >= 48 && code <= 57) val = code - 48 // 0-9\n    else val = Infinity\n    if (val >= radix) break\n    ++this.pos\n    total = total * radix + val\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null\n\n  return total\n}\n\npp.readRadixNumber = function(radix) {\n  this.pos += 2 // 0x\n  let val = this.readInt(radix)\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix)\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n  return this.finishToken(tt.num, val)\n}\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  let start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\")\n  let next = this.input.charCodeAt(this.pos)\n  if (next === 46) { // '.'\n    ++this.pos\n    this.readInt(10)\n    isFloat = true\n    next = this.input.charCodeAt(this.pos)\n  }\n  if (next === 69 || next === 101) { // 'eE'\n    next = this.input.charCodeAt(++this.pos)\n    if (next === 43 || next === 45) ++this.pos // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\")\n    isFloat = true\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n\n  let str = this.input.slice(start, this.pos), val\n  if (isFloat) val = parseFloat(str)\n  else if (!octal || str.length === 1) val = parseInt(str, 10)\n  else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\")\n  else val = parseInt(str, 8)\n  return this.finishToken(tt.num, val)\n}\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  let ch = this.input.charCodeAt(this.pos), code\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected()\n    let codePos = ++this.pos\n    code = this.readHexChar(this.input.indexOf('}', this.pos) - this.pos)\n    ++this.pos\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\")\n  } else {\n    code = this.readHexChar(4)\n  }\n  return code\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code)\n  code -= 0x10000\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp.readString = function(quote) {\n  let out = \"\", chunkStart = ++this.pos\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated string constant\")\n    let ch = this.input.charCodeAt(this.pos)\n    if (ch === quote) break\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos)\n      out += this.readEscapedChar(false)\n      chunkStart = this.pos\n    } else {\n      if (isNewLine(ch)) this.raise(this.start, \"Unterminated string constant\")\n      ++this.pos\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++)\n  return this.finishToken(tt.string, out)\n}\n\n// Reads template string tokens.\n\npp.readTmplToken = function() {\n  let out = \"\", chunkStart = this.pos\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated template\")\n    let ch = this.input.charCodeAt(this.pos)\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && this.type === tt.template) {\n        if (ch === 36) {\n          this.pos += 2\n          return this.finishToken(tt.dollarBraceL)\n        } else {\n          ++this.pos\n          return this.finishToken(tt.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos)\n      return this.finishToken(tt.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos)\n      out += this.readEscapedChar(true)\n      chunkStart = this.pos\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos)\n      ++this.pos\n      switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) ++this.pos\n        case 10:\n          out += \"\\n\"\n          break\n        default:\n          out += String.fromCharCode(ch)\n          break\n      }\n      if (this.options.locations) {\n        ++this.curLine\n        this.lineStart = this.pos\n      }\n      chunkStart = this.pos\n    } else {\n      ++this.pos\n    }\n  }\n}\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  let ch = this.input.charCodeAt(++this.pos)\n  ++this.pos\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      let octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0]\n      let octal = parseInt(octalStr, 8)\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1)\n        octal = parseInt(octalStr, 8)\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.raise(this.pos - 2, \"Octal literal in strict mode\")\n      }\n      this.pos += octalStr.length - 1\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n}\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  let codePos = this.pos\n  let n = this.readInt(16, len)\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\")\n  return n\n}\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false\n  let word = \"\", first = true, chunkStart = this.pos\n  let astral = this.options.ecmaVersion >= 6\n  while (this.pos < this.input.length) {\n    let ch = this.fullCharCodeAtPos()\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true\n      word += this.input.slice(chunkStart, this.pos)\n      let escStart = this.pos\n      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"\n        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\")\n      ++this.pos\n      let esc = this.readCodePoint()\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        this.raise(escStart, \"Invalid Unicode escape\")\n      word += codePointToString(esc)\n      chunkStart = this.pos\n    } else {\n      break\n    }\n    first = false\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n}\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  let word = this.readWord1()\n  let type = tt.name\n  if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))\n    type = keywordTypes[word]\n  return this.finishToken(type, word)\n}\n"]}