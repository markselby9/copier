{"version":3,"sources":["_stream_readable.js"],"names":[],"mappings":"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","file":"_stream_readable-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n"]}